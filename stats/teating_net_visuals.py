# -*- coding: utf-8 -*-
"""teating-net-visuals.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1KERj8-aGjiBXC4fW_8dfG-F9ld_CAcBp
"""

import pandas as pd
import networkx as nx
phases = {}
G = {}
for i in range(1,12): 
  var_name = "phase" + str(i)
  file_name = "https://raw.githubusercontent.com/ragini30/Networks-Homework/main/" + var_name + ".csv"

#   file_name = "../data/CAVIAR/" + var_name + ".csv"
  phases[i] = pd.read_csv(file_name, index_col = ["players"])
  phases[i].columns = "n" + phases[i].columns
  phases[i].index = phases[i].columns
  G[i] = nx.from_pandas_adjacency(phases[i],create_using=nx.DiGraph())
  G[i].name = var_name

for i in range(1,12): 
  h,a=nx.algorithms.link_analysis.hits(G[i],max_iter=1000000)
  print("phase {0} n1 hubs {1} auth {2}.".format(i,h['n1'],a['n1']))
  print("n3 hubs {1} auth {2}.".format(i,h['n3'],a['n3']))

!apt-get install graphviz graphviz-dev
!pip install pygraphviz

import matplotlib.pyplot as plt
for i in range(1,12):
  fig=plt.figure(i)
  fig.suptitle(i)
  nx.draw(G[i], pos=nx.drawing.nx_agraph.graphviz_layout(G[i]), with_labels=True) 
plt.show()

create_using = nx.DiGraph().)
With networkx you can use the nx.algorithms.link_analysis.hits function, set max_iter=1000000 for best results.